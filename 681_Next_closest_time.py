# # # # -*- coding: utf-8 -*-
import itertools
class Solution(object):
    def nextClosestTime(self, time):
        """
        :type time: str
        :rtype: str
        """


if __name__ == '__main__':
    s = Solution()

    given_time = "11:34"
    allowed = {int(x) for x in given_time if x != ':'}
    print(list(itertools.product(allowed, repeat = 4)))
    '''
    itertools.product([1,3,4], repeat = 4)) will give

    [(1, 1, 1, 1), (1, 1, 1, 3), (1, 1, 1, 4), (1, 1, 3, 1), (1, 1, 3, 3), (1, 1, 3, 4), (1, 1, 4, 1),
     (1, 1, 4, 3), (1, 1, 4, 4), (1, 3, 1, 1), (1, 3, 1, 3), (1, 3, 1, 4), (1, 3, 3, 1), (1, 3, 3, 3),
     (1, 3, 3, 4), (1, 3, 4, 1), (1, 3, 4, 3), (1, 3, 4, 4), (1, 4, 1, 1), (1, 4, 1, 3), (1, 4, 1, 4),
     (1, 4, 3, 1), (1, 4, 3, 3), (1, 4, 3, 4), (1, 4, 4, 1), (1, 4, 4, 3), (1, 4, 4, 4), (3, 1, 1, 1),
     (3, 1, 1, 3), (3, 1, 1, 4), (3, 1, 3, 1), (3, 1, 3, 3), (3, 1, 3, 4), (3, 1, 4, 1), (3, 1, 4, 3),
     (3, 1, 4, 4), (3, 3, 1, 1), (3, 3, 1, 3), (3, 3, 1, 4), (3, 3, 3, 1), (3, 3, 3, 3), (3, 3, 3, 4),
     (3, 3, 4, 1), (3, 3, 4, 3), (3, 3, 4, 4), (3, 4, 1, 1), (3, 4, 1, 3), (3, 4, 1, 4), (3, 4, 3, 1),
     (3, 4, 3, 3), (3, 4, 3, 4), (3, 4, 4, 1), (3, 4, 4, 3), (3, 4, 4, 4), (4, 1, 1, 1), (4, 1, 1, 3),
     (4, 1, 1, 4), (4, 1, 3, 1), (4, 1, 3, 3), (4, 1, 3, 4), (4, 1, 4, 1), (4, 1, 4, 3), (4, 1, 4, 4),
     (4, 3, 1, 1), (4, 3, 1, 3), (4, 3, 1, 4), (4, 3, 3, 1), (4, 3, 3, 3), (4, 3, 3, 4), (4, 3, 4, 1),
     (4, 3, 4, 3), (4, 3, 4, 4), (4, 4, 1, 1), (4, 4, 1, 3), (4, 4, 1, 4), (4, 4, 3, 1), (4, 4, 3, 3),
     (4, 4, 3, 4), (4, 4, 4, 1), (4, 4, 4, 3), (4, 4, 4, 4)]
    '''

    '''
    (-710) % (24 * 60) = (-710) % 1440 = (-1*1440 + 730) % 1440 = 730

    总时间为24小时,
    '''